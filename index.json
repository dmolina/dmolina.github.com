[{"authors":["admin"],"categories":null,"content":"Daniel Molina is a professor of artificial intelligence at the University of Granada. His research interests include numerical optimization, evolutionary algorithms, deep learning, and machine learning.\n","date":-62135596800,"expirydate":-62135596800,"kind":"taxonomy","lang":"en","lastmod":1577717281,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/admin/","section":"authors","summary":"Daniel Molina is a professor of artificial intelligence at the University of Granada. His research interests include numerical optimization, evolutionary algorithms, deep learning, and machine learning.","tags":null,"title":"Daniel Molina","type":"authors"},{"authors":["M. Leon","N. Xiong","D. Molina","F. Herrera"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"f57f1db85d8488243d5402fce248188b","permalink":"/publication/leon-2019795/","publishdate":"2019-12-30T14:59:53.122957Z","relpermalink":"/publication/leon-2019795/","section":"publication","summary":"","tags":null,"title":"A novel memetic framework for enhancing differential evolution algorithms via combination with alopex local search","type":"publication"},{"authors":["D. Molina","F. Herrera"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724886,"objectID":"d656e05e772803f74422d37b0b9d4b71","permalink":"/publication/molina-20197/","publishdate":"2019-12-30T14:59:53.122366Z","relpermalink":"/publication/molina-20197/","section":"publication","summary":"","tags":null,"title":"Applying Memetic algorithm with Improved L-SHADE and Local Search Pool for the 100-digit challenge on Single Objective Numerical Optimization","type":"publication"},{"authors":["J. Del Ser","E. Osaba","D. Molina","X.-S. Yang","S. Salcedo-Sanz","D. Camacho","S. Das","P.N. Suganthan","C.A. Coello Coello","F. Herrera"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577725702,"objectID":"094bfd5ee84a2e9b751f75687cfe6454","permalink":"/publication/del-ser-2019220/","publishdate":"2019-12-30T14:59:53.121899Z","relpermalink":"/publication/del-ser-2019220/","section":"publication","summary":"","tags":null,"title":"Bio-inspired computation: Where we stand and what's next","type":"publication"},{"authors":["D. Molina","A.R. Nesterenko","A. Latorre"],"categories":null,"content":"","date":1546300800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"b83419dbdf98d0b4ecdd394f2709b2b5","permalink":"/publication/molina-2019359/","publishdate":"2019-12-30T14:59:53.122696Z","relpermalink":"/publication/molina-2019359/","section":"publication","summary":"","tags":null,"title":"Comparing Large-Scale Global Optimization Competition winners in a real-world problem","type":"publication"},{"authors":null,"categories":["computer-science"],"content":"I usually design my evolutionary algorithms in Python (initially for prototyping, but I am too lazy for doing later a version in C/C++ or similar). However, unfortunately, the majority of people in my area work in Matlab 😭. Thus, sometimes I have to wrap the source code for the benchmarks in competition to python ☺.\nThis is the story of the my new package at PyPi: https://pypi.org/project/cec2019comp100digit/.\nThis package is for being able to participate in the CEC'2019 100-Digit Challenge Competition, website here: http://www.ntu.edu.sg/home/epnsugan/index%5Ffiles/CEC2019/CEC2019.htm. That website was the source code in C/C++ and Matlab (using mex), but it was missing Python. This package solves it.\nAs usual, the complete source code is available at Github.\nIn the package Pypi page there is more documentation, but in the following I briefly describe the API:\nThe package is very simple to use. There is a package cec2019comp100digit with three functions:\n  init(fun_id, Dim) Init the function for the dimension selected.\n  eval(sol) Eval the solution, when sol is a numpy (or array) of dimension Dim.\n  end() Free resources.\n  Installation It as simple as:\npip install cec2019comp100digit  Requirements:\n Python3. Numpy. Cython.  Process   For init the function.\nfrom cec2019comp100digit import cec2019comp100digit bench = cec2019comp100digit bench.init(3, 10) # Init function 3 with dimension 10    To create one or several solutions to eval\nIt can be used both numpy and/or array (but only numpy has been actually tested).\nimport numpy as np sol = np.random.rand(10)    Evaluate the solution\nIt is as simple as:\nfit = bench.eval(sol)    Finally, for free the resources\nbench.end()    You can also use it for participate in the competition.\nI would like to take this opportunity to remind you that I too am organising another competition, you do not any excuse 😄.\n","date":1544785860,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"cbd4a543ae4475cfea7309a30823c7df","permalink":"/post/cec2019comp100digit/","publishdate":"2018-12-14T12:11:00+01:00","relpermalink":"/post/cec2019comp100digit/","section":"post","summary":"I usually design my evolutionary algorithms in Python (initially for prototyping, but I am too lazy for doing later a version in C/C++ or similar). However, unfortunately, the majority of people in my area work in Matlab 😭. Thus, sometimes I have to wrap the source code for the benchmarks in competition to python ☺.\nThis is the story of the my new package at PyPi: https://pypi.org/project/cec2019comp100digit/.\nThis package is for being able to participate in the CEC'2019 100-Digit Challenge Competition, website here: http://www.","tags":["computer_science","python"],"title":"Packages in Python for CEC'2019 100 Digit Competition","type":"post"},{"authors":null,"categories":["computer-science"],"content":"I write because I am organizing the Large-Scale Global Optimization Competition at the IEEE Congress on Evolutionary Computation CEC'2019, with interesting news:\n  Source code for C++/Matlab/Java/Python.\n  The source code store during the run all required files with the results, you do not need to worry about that, we do it for you!\n  In python it is as simple as pip install cec2013lsgo to be able to run the experiments, in C++, and the source code and documentation is freely available.\n  The new site tacolab.org to compare your own proposals with existings ones, it do the tables, figures and comparisons for you (including statistical testing).\n  There is not excuse for not participating!\n","date":1544698020,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"9e094d89b7c82f047184b925bc95682b","permalink":"/post/lsgo_cec2019/","publishdate":"2018-12-13T11:47:00+01:00","relpermalink":"/post/lsgo_cec2019/","section":"post","summary":"I write because I am organizing the Large-Scale Global Optimization Competition at the IEEE Congress on Evolutionary Computation CEC'2019, with interesting news:\n  Source code for C++/Matlab/Java/Python.\n  The source code store during the run all required files with the results, you do not need to worry about that, we do it for you!\n  In python it is as simple as pip install cec2013lsgo to be able to run the experiments, in C++, and the source code and documentation is freely available.","tags":["computer_science"],"title":"New LSGO Competition at the CEC'2019","type":"post"},{"authors":null,"categories":["teaching","programming"],"content":"In my last course, I decided to give a small introduction about CMake. The reason is that, although we teach them Make, the majority of students do not use them in their programs. In fact, many times they create a \u0026ldquo;makefile\u0026rdquo; program to pretend they are using \u0026ldquo;make\u0026rdquo;, but actually, it is a bash script. My intention is to teach them Cmake to encourage them to use an automatic tool for compiling, expecting they use it more, by its simpler syntax.\nThe english version is:\n   The spanish version is:\n   All the source code (in reveal.js, through org-reveal) are available at: https://github.com/dmolina/intro_cmake\n","date":1543093860,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"5b8e4070cda8e57b248b27e8bb93812b","permalink":"/post/intro_cmake/","publishdate":"2018-11-24T22:11:00+01:00","relpermalink":"/post/intro_cmake/","section":"post","summary":"In my last course, I decided to give a small introduction about CMake. The reason is that, although we teach them Make, the majority of students do not use them in their programs. In fact, many times they create a \u0026ldquo;makefile\u0026rdquo; program to pretend they are using \u0026ldquo;make\u0026rdquo;, but actually, it is a bash script. My intention is to teach them Cmake to encourage them to use an automatic tool for compiling, expecting they use it more, by its simpler syntax.","tags":["cmake","cpp","teaching"],"title":"Introduction to CMake","type":"post"},{"authors":null,"categories":["computer-science"],"content":"Several weeks ago, I was at the the IEEE Conference on Evolutionary Computation (CEC'2018), and also at the National Conference on Artificial Intelligence, in Spain, website.\nIn https://speakerdeck.com/dmolina there are the slides of my presentations in the International Conference.\nIn particular, my works are the following:\n A new algorithm, SHADE-ILS which won the Large Scale Global Optimization, slides. You spanish readers, there is also a new version in Spanish.  In English\n In Spanish\n    Figure 1: Certificate as a winner of the LSGO competition    A new website for comparisons algorithms, https://tacolab.org, which is briefly described here in English, and also in Spanish.  PS: I will talk about the Tacolab website in next entries, because it is the results of many weeks of works.\n","date":1542114540,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"64c457440c83d288d15a6adcd84f71f5","permalink":"/post/cec2018/","publishdate":"2018-11-13T14:09:00+01:00","relpermalink":"/post/cec2018/","section":"post","summary":"Several weeks ago, I was at the the IEEE Conference on Evolutionary Computation (CEC'2018), and also at the National Conference on Artificial Intelligence, in Spain, website.\nIn https://speakerdeck.com/dmolina there are the slides of my presentations in the International Conference.\nIn particular, my works are the following:\n A new algorithm, SHADE-ILS which won the Large Scale Global Optimization, slides. You spanish readers, there is also a new version in Spanish.  In English","tags":["computer_science"],"title":"Participation in IEEE Congress on Evolutionary Computation CEC'2018","type":"post"},{"authors":["D. Molina","A. LaTorre","F. Herrera"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577725702,"objectID":"4689a9d4728aa7762ed0206f611ed027","permalink":"/publication/molina-2018517/","publishdate":"2019-12-30T14:59:53.148279Z","relpermalink":"/publication/molina-2018517/","section":"publication","summary":"","tags":null,"title":"An Insight into Bio-inspired and Evolutionary Algorithms for Global Optimization: Review, Analysis, and Lessons Learnt over a Decade of Competitions","type":"publication"},{"authors":["D. Molina","A. Latorre","F. Herrera"],"categories":null,"content":"","date":1514764800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577725702,"objectID":"313890b0d043e8a0c0adff4889830a79","permalink":"/publication/molina-2018/","publishdate":"2019-12-30T14:59:53.147765Z","relpermalink":"/publication/molina-2018/","section":"publication","summary":"","tags":null,"title":"SHADE with Iterative Local Search for Large-Scale Global Optimization","type":"publication"},{"authors":null,"categories":["programming"],"content":"Last weeks I have working with a django app for research. I will update it when it will be ready ;-).\nHowever, the introduction of Javascript and specifically Vue.js have produce that the website is mainly dynamic using JS and not Python. Also, we have done a static website http://www.tflsgo.org/ (using Gitlab Page and Jekyll), so I started considering to transform the website to a static website using Rest service with Python.\nFirst, I was considering Django Rest Framework but finally I decided to use Flask-Restful by its simplicity (and Flask-SQLAlchemy for the communication with the database).\nThe problem with that was how to serve the Bokeh figures as Rest services. I starting reading websites and manual and searching but I didn't get any satisfactory answer.\nHours later, I obtained the answer, so I am going to explain it to avoid the reader to waste his/her time.\nUsing django First, the solution is the embed subpackage at https://bokeh.pydata.org/en/latest/docs/reference/embed.html. There are several options:\n  file_html: generate the html output, it is not useful for rest.\n  server_document: It requires a Bokeh server.\n  components: It returns a js script and a div to include.\n  autoload_static: It returns a js function and a div to include.\n  In the django layout, I used:\n\u0026lt;html\u0026gt; \u0026lt;head\u0026gt; ... {% block bokeh_js %}{% endblock %} \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; ... {% block bokeh_fig %}{% endblock %} \u0026lt;/body\u0026gt; \u0026lt;/body\u0026gt;  In the template I done:\n{% block bokeh_fig %} {% for fig in bokeh_divs %} \u0026lt;h2\u0026gt;{{fig.0}}\u0026lt;/h2\u0026gt; {{ fig.1 | safe}} {% endfor %} {% endblock %}  safe is required to allow the bokeh visualization, and fig is a dictionary. Using the default django template system, fig.0 refers to the key and fig.1 refers to the value.\nWhen the views generate these variable by:\nscripts, divs = components(figs) return render(request, 'compare.html', { # ... 'bokeh_script': scripts, 'bokeh_divs': divs_sorted, })  when figs is a dictionary with the different plot by figures. The idea was to visualize the plots with a title with the caption of each one of them.\nFlask-Rest version Although we could visualize using function components, for the Rest service it was not adequate.\nIn the html page, the bokeh and jquery are required:\n\u0026lt;script src=\u0026quot;https://code.jquery.com/jquery-3.2.1.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;http://cdn.pydata.org/bokeh/release/bokeh-0.12.13.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;http://cdn.pydata.org/bokeh/release/bokeh-widgets-0.12.13.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;http://cdn.pydata.org/bokeh/release/bokeh-tables-0.12.13.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;  and a div in which the figure will be shown:\n\u0026lt;body\u0026gt; ... \u0026lt;div id=\u0026quot;#fig\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;/body\u0026gt;  The complete file is:\n\u0026lt;!doctype html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;title\u0026gt;Test\u0026lt;/title\u0026gt; \u0026lt;script src=\u0026quot;https://code.jquery.com/jquery-3.2.1.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;http://cdn.pydata.org/bokeh/release/bokeh-0.12.13.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;http://cdn.pydata.org/bokeh/release/bokeh-widgets-0.12.13.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026quot;http://cdn.pydata.org/bokeh/release/bokeh-tables-0.12.13.min.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot; /\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;h1\u0026gt;Test\u0026lt;/h1\u0026gt; \u0026lt;div id=\u0026quot;fig\u0026quot;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script src=\u0026quot;./run.js\u0026quot;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;  Then, the web apps include:\nfrom flask import Flask from flask_restful import Resource, Api from flask_cors import CORS from holoviews as hv from bokeh.resources import CDN from bokeh.embed import autoload_static # Create the app app = Flask(__name__) # Initially I was the error Cross Origin Resource Sharing # that allow all origin domains, not complete sure, only by demo CORS(app) # Restful api = Api(app) # Configurate holoviews to create bokeh figures hv.extension('bokeh') renderer = hv.renderer('bokeh') # An example of generation of bokeh def get_plot(): xs = range(-10,11) ys = [100+x**2 for x in xs] plot_hv = hv.Curve((xs, ys)) plot = renderer.get_plot(plot_hv).state return plot # Example class Figure(Resource): def get(self): plot = get_plot() div, js = components(plot) js, tags = autoload_static(plot, CDN, \u0026quot;fig/\u0026quot;) return {'js': js, 'tags': tags} api.add_resource(Figure, '/fig') if __name__ == '__main__': app.run()  The js variable is the javascript function to run the visualization of the Bokeh figure, and tags is the div in which the figure will be shown.\nThe final JS code is:\n$.ajax({ url: 'http://localhost:5000/fig', method: 'GET', success: function(data) { console.log(data); // First, the div code is inserted $('#fig').replaceWith(data['tags']); // Later, the JS code must be evaluated eval(data['js']); }, });  And the result is:\n   ","date":1513699260,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"72fa308920bb4c04ff69a1515c6179eb","permalink":"/post/rest_bokeh/","publishdate":"2017-12-19T17:01:00+01:00","relpermalink":"/post/rest_bokeh/","section":"post","summary":"Last weeks I have working with a django app for research. I will update it when it will be ready ;-).\nHowever, the introduction of Javascript and specifically Vue.js have produce that the website is mainly dynamic using JS and not Python. Also, we have done a static website http://www.tflsgo.org/ (using Gitlab Page and Jekyll), so I started considering to transform the website to a static website using Rest service with Python.","tags":["python","flask","django","bokeh"],"title":"Bokeh plot in Django and with REST and Flask","type":"post"},{"authors":null,"categories":["emacs"],"content":"I love Emacs and the auto-fill more. When I work I use it always to make easier to read the text (with a small value, like 80 or 100). Then, if I have to copy to a Word Document (in collaboration with other people) or a text (like in the submission of a review) I simple set the fill-column to a large value (2000 or similar), with C-x f. Later, I copy all the text.\nUntil now I have suffered in silence a small problem in text-mode (not in org-mode). If you put\nText. - Item 1. - Item 2.  After the fill-mode, you have:\nText. - Item 1 Item 2.  And to have in right you have to put a line between them:\nText. - Item 1. - Item 2.  (The line between Text and first item is also required).\nI though it was something inevitable, but checking the documentation,\nhttps://www.emacswiki.org/emacs/FillParagraph\nI have known that with a simple line in elisp that behavior is fixed:\n;; The original value is \u0026quot;\\f\\\\|[ ]*$\u0026quot;, so we add the bullets (-), (+), and (*). ;; There is no need for \u0026quot;^\u0026quot; as the regexp is matched at the beginning of line. (setq paragraph-start \u0026quot;\\f\\\\|[ \\t]*$\\\\|[ \\t]*[-+*] \u0026quot;)  I must check the available documentation more often :-).\n","date":1513333680,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"f5912e94b653bc3b55da8c0a3bd5c3c5","permalink":"/post/emacs_justify/","publishdate":"2017-12-15T11:28:00+01:00","relpermalink":"/post/emacs_justify/","section":"post","summary":"I love Emacs and the auto-fill more. When I work I use it always to make easier to read the text (with a small value, like 80 or 100). Then, if I have to copy to a Word Document (in collaboration with other people) or a text (like in the submission of a review) I simple set the fill-column to a large value (2000 or similar), with C-x f. Later, I copy all the text.","tags":["emacs","trick"],"title":"Fill-more or the important of reading documentation","type":"post"},{"authors":null,"categories":["opensource"],"content":"I have recently changed to Firefox 3.5, and it is awesome!!\nThe main improvements I have checked:\n  Better performance.\n  Reader mode, it is very useful to read without distractions, specially in mobile. Also, it is mouseless friendly, with the shortkey Ctrl+Alt+r.\n  Screenshots of a website, that you can share with anybody (not more excuses for my students for not showing me their web app in develop).\n  The bad thing is that many extensions are not valid anymore:\n  Zotero has changed to be a java application, and the great Zotelo (extension for Emacs) is not working anymore :-(.\n  Also, several extensions to improve the mouseless navigation stop working.\n  Fortunately, uBlock Origin is still working, and I have found Tridactyl, an extension with several nice features:\n  f and F allows you to open links (in same tab or new) identifying them with letters (in a very sensible way, my favourive way until now).\n  b is bookmarks, it allows you to go to another open tab.\n  s is search mode using the history, with tab you can go your favourite website more easily.\n  And ZZ close all firefox tabs, very useful for a person with Vim-background like me :-).\n  To summarize, if you do not like use the mouse for almost everything, and you want to browse more easily, try Tridactyl.\n","date":1512472200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"0155ce046c8a7f3afb99482a76fecf8f","permalink":"/post/firefox35/","publishdate":"2017-12-05T12:10:00+01:00","relpermalink":"/post/firefox35/","section":"post","summary":"I have recently changed to Firefox 3.5, and it is awesome!!\nThe main improvements I have checked:\n  Better performance.\n  Reader mode, it is very useful to read without distractions, specially in mobile. Also, it is mouseless friendly, with the shortkey Ctrl+Alt+r.\n  Screenshots of a website, that you can share with anybody (not more excuses for my students for not showing me their web app in develop).","tags":["firefox","opensource","mouseless"],"title":"Firefox 3.5 and Mouseless","type":"post"},{"authors":null,"categories":["emacs"],"content":"In last years I have been using Emacs for almost all my daily tasks:\n Reading my emails (using mu4e). Creating the slides for my courses using org-beamer. Using dired to navigate for the file system). Publishing this blog (using Hugo and ox-hugo).  The last thing to integrate into emacs is reading blogs and news from RSS files. Adding elfeed and elfeed-org I was able to create RSS. elfeed-org is very simple, it allows to add the feeds as items in org-mode:\n- Blogs :elfeed: - https://www.meneame.net/rss :news:portada: - https://www.meneame.net/rss?status=queued :news: - http://planet.emacsen.org/atom.xml :emacs: - https://www.reddit.com/r/programming/.rss :programming: ...  The tags for each feed will be shared for all articles.\nThen, loading elfeed, it can be obtained a screen showing the different articles:\n   And selecting an article, it can be open, read and open each link by the default browser.\n   Several opinions about elfeed:\n  It is very simple to use.\n  The use of tags is very powerful, not only they received the tags from the category, and you can add a tag to an article.\n  The search filter is simple and very powerful, you can filter both for date and for tags.\n  The search filter can be kept as bookmark, so using C-x r b it can be seen the article using a particular filter.\n  To summary, elfeed has been a great discovery. If you use emacs, give it a try.\n","date":1507823580,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"252efd190f048f713f372819a2eb74de","permalink":"/post/emacs_rss/","publishdate":"2017-10-12T17:53:00+02:00","relpermalink":"/post/emacs_rss/","section":"post","summary":"In last years I have been using Emacs for almost all my daily tasks:\n Reading my emails (using mu4e). Creating the slides for my courses using org-beamer. Using dired to navigate for the file system). Publishing this blog (using Hugo and ox-hugo).  The last thing to integrate into emacs is reading blogs and news from RSS files. Adding elfeed and elfeed-org I was able to create RSS. elfeed-org is very simple, it allows to add the feeds as items in org-mode:","tags":["emacs"],"title":"Elfeed: Using emacs for reading RSS","type":"post"},{"authors":null,"categories":["teaching","programming"],"content":"Two weeks ago I started my first teaching day, replacing a teacher that has still not gone to Ceuta (because the temporal contract was offered to many people, and all of them refuse it). Do not worry, they will have the material, I said to myself, naïvely.\nHowever, my Phd. advisor, the coordinator of the course, has decided to replace the practice classes from Knime to Python using the different tools availables. The reason? Because the Python, with R, are very popular in Data Science. Also, in Python there are very good tools for data analysis (like numpy, pandas) or machine learning (scikit-learn, \u0026hellip;). It seems a good idea, but I have not material, and I have only two days :-O.\nEven more, I had still no access to the Moodle for the material of the course. So, after a very busy Saturday, I finished including a material, in http://github.com/dmolina/es_intro_python, with interesting references and an install introduction.\nAlso, I use a very curious tool, https://gitpitch.com, that allow to create slides from a markdown file from the repository github, Slides using Pitch.\nMy final experience was:\n  Very few students, so it was very relaxed because you can solve the problems for each student. However, using the anaconda there is few problems (and the . In prevision of the big size of the anaconda distribution, my downloaded version was copied by USB Disk to students.\n  The jupyter notebook allow to test the python code without installing or learning an IDE (later they can install which they prefer, but for teaching you do not need any of them).\n  You have to prepare exercises, because if not, you talk and show and you can finished in few minutes a material that takes you many hours.\n  When you have only a weekend for preparing material, I must have already strong knowledge about the topic (fortunately, it was my case). If not, you will not be confident teaching it.\n  For the second day, I was preparing another slide for teaching pandas (with the most useful operations, by my experience), available as pdf format here: slides_pandas.pdf (In a future post, I will say as I prepare my slides using Emacs+Org-mode). Unfortunately, the new teacher was ready, and I have to finish my courses using python for BI.\n","date":1507565880,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"44695beecf9f9aefd70eac694b5f062c","permalink":"/post/python_bi/","publishdate":"2017-10-09T18:18:00+02:00","relpermalink":"/post/python_bi/","section":"post","summary":"Two weeks ago I started my first teaching day, replacing a teacher that has still not gone to Ceuta (because the temporal contract was offered to many people, and all of them refuse it). Do not worry, they will have the material, I said to myself, naïvely.\nHowever, my Phd. advisor, the coordinator of the course, has decided to replace the practice classes from Knime to Python using the different tools availables.","tags":["python","teaching"],"title":"Using Python for Business Intelligence","type":"post"},{"authors":["D. Molina","F. Moreno-García","F. Herrera"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"4b2fbd2159dc8ef12f6e7d0d31e41fac","permalink":"/publication/molina-2017805/","publishdate":"2019-12-30T14:59:53.149021Z","relpermalink":"/publication/molina-2017805/","section":"publication","summary":"","tags":null,"title":"Analysis among winners of different IEEE CEC competitions on real-parameters optimization: Is there always improvement?","type":"publication"},{"authors":["C. García-Martínez","P.D. Gutiérrez","D. Molina","M. Lozano","F. Herrera"],"categories":null,"content":"","date":1483228800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1483228800,"objectID":"79d3f991a6e657f221c15ab2f9847db6","permalink":"/publication/garcia-martinez-20175573/","publishdate":"2019-12-30T14:59:53.148708Z","relpermalink":"/publication/garcia-martinez-20175573/","section":"publication","summary":"","tags":null,"title":"Since CEC 2005 competition on real-parameter optimisation: a decade of research, progress and comparative analysis’s weakness","type":"publication"},{"authors":["S. Salcedo-Sanz","C. Camacho-Gomez","D. Molina","F. Herrera"],"categories":null,"content":"","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"ef286039dd986b5cc04c6e6ff075a422","permalink":"/publication/salcedo-sanz-20163574/","publishdate":"2019-12-30T14:59:53.14959Z","relpermalink":"/publication/salcedo-sanz-20163574/","section":"publication","summary":"","tags":null,"title":"A coral reefs optimization algorithm with substrate layers and local search for large scale global optimization","type":"publication"},{"authors":["C. Bergmeir","D. Molina","J.M. Benítez"],"categories":null,"content":"","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"cadeb1e6cb18e72e747d51153db8c826","permalink":"/publication/bergmeir-2016/","publishdate":"2019-12-30T14:59:53.1493Z","relpermalink":"/publication/bergmeir-2016/","section":"publication","summary":"","tags":null,"title":"Memetic algorithms with local search chains in R: The Rmalschains package","type":"publication"},{"authors":["B. Lacroix","D. Molina","F. Herrera"],"categories":null,"content":"","date":1451606400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"d08745a4a4668202edfc366ab05aac55","permalink":"/publication/lacroix-2016719/","publishdate":"2019-12-30T14:59:53.149865Z","relpermalink":"/publication/lacroix-2016719/","section":"publication","summary":"","tags":null,"title":"Region-based memetic algorithm with archive for multimodal optimisation","type":"publication"},{"authors":["M. Lastra","D. Molina","J.M. Benítez"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"fdc56601c98662d5a74263a765ea53d7","permalink":"/publication/lastra-201535/","publishdate":"2019-12-30T14:59:53.150407Z","relpermalink":"/publication/lastra-201535/","section":"publication","summary":"","tags":null,"title":"A high performance memetic algorithm for extremely high-dimensional problems","type":"publication"},{"authors":["N. Xiong","D. Molina","M.L. Ortiz","F. Herrera"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"597d2c88b4de37f494ab3780f1006da4","permalink":"/publication/xiong-2015606/","publishdate":"2019-12-30T14:59:53.150981Z","relpermalink":"/publication/xiong-2015606/","section":"publication","summary":"","tags":null,"title":"A Walk into Metaheuristics for Engineering Optimization: Principles, Methods and Recent Trends","type":"publication"},{"authors":["D. Molina","F. Herrera"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"c0cd975c9d8705058cffe1867b371f62","permalink":"/publication/molina-20151974/","publishdate":"2019-12-30T14:59:53.150137Z","relpermalink":"/publication/molina-20151974/","section":"publication","summary":"","tags":null,"title":"Iterative hybridization of de with Local Search for the CEC'2015 special session on large scale global optimization","type":"publication"},{"authors":["T. Liao","D. Molina","T. Stützle"],"categories":null,"content":"","date":1420070400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"5d068206145a8e8a2351a5eee593de1c","permalink":"/publication/liao-2015490/","publishdate":"2019-12-30T14:59:53.150705Z","relpermalink":"/publication/liao-2015490/","section":"publication","summary":"","tags":null,"title":"Performance evaluation of automatically tuned continuous optimizers on different benchmark sets","type":"publication"},{"authors":["T. Liao","D. Molina","M.A.M. de Oca","T. Stützle"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"44e20e0d7b40f85bb6f5da63b25ef711","permalink":"/publication/liao-2014351/","publishdate":"2019-12-30T14:59:53.151828Z","relpermalink":"/publication/liao-2014351/","section":"publication","summary":"","tags":null,"title":"A Note on Bound Constraints Handling for the IEEE CEC'05 Benchmark Function Suite","type":"publication"},{"authors":["D. Molina","B. Lacroix","F. Herrera"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"45439454056efca726b8de51106a9535","permalink":"/publication/molina-20141633/","publishdate":"2019-12-30T14:59:53.151529Z","relpermalink":"/publication/molina-20141633/","section":"publication","summary":"","tags":null,"title":"Influence of regions on the memetic algorithm for the CEC'2014 Special Session on Real-Parameter Single Objective Optimisation","type":"publication"},{"authors":["B. Lacroix","D. Molina","F. Herrera"],"categories":null,"content":"","date":1388534400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"6d10086a0734185d29009b87a78a6292","permalink":"/publication/lacroix-201415/","publishdate":"2019-12-30T14:59:53.15126Z","relpermalink":"/publication/lacroix-201415/","section":"publication","summary":"","tags":null,"title":"Region based memetic algorithm for real-parameter optimisation","type":"publication"},{"authors":["B. Lacroix","D. Molina","F. Herrera"],"categories":null,"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"6ab3dc7a42553fe63451160ef339a996","permalink":"/publication/lacroix-20131945/","publishdate":"2019-12-30T14:59:53.152118Z","relpermalink":"/publication/lacroix-20131945/","section":"publication","summary":"","tags":null,"title":"Dynamically updated region based memetic algorithm for the 2013 CEC Special Session and Competition on Real Parameter Single Objective Optimization","type":"publication"},{"authors":["D. Molina","A. Puris","R. Bello","F. Herrera"],"categories":null,"content":"","date":1356998400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"dc655f5a710f07b4a1fe324d0f7eeb40","permalink":"/publication/molina-201387/","publishdate":"2019-12-30T14:59:53.152388Z","relpermalink":"/publication/molina-201387/","section":"publication","summary":"","tags":null,"title":"Variable mesh optimization for the 2013 CEC Special Session Niching Methods for Multimodal Optimization","type":"publication"},{"authors":null,"categories":null,"content":".org-center { margin-left: auto; margin-right: auto; text-align: center; }     Figure 1: Which is this crazy guy?    I am a teacher assistant at the University of Granada, specialised in Artificial Intelligence. As many people, I have several roles:\n  Since a researcher side, I have a index-h of 16, with more than 24 papers (more than 18 in Q1), with more than 3000 citations. In the main menu, you can see my publications (in many case with the PDF freely available, ask me if you need any other). Also, I was until this year the Chair on the IEEE CIS Task Force on Large-Scale Global Optimization, because it is a type of optimization I am particularly interested (I was winner in two international competitions, at 2010 and more recently at 2018).\n  As a teacher, now I am teaching at the University of Granada, in Ceuta, but for more than 10 years I was teaching in the University of Cádiz, where I left a part of my hearts (people were more my friends than my colleagues).\n  As a computer science that love programming, I am interesting in programming in different languages (like C++, Java, \u0026hellip;.), and I particularly love Python, and another interesting growing languages (like Rust or Julia). I define myself also as a Linux user, this is the only OS in my computers for more than 15 years. Also, I am a truly believer in Free Software (actually, I was the secretary of Free Software Office at the University of Cadiz.\n  As a real-world person, I love reading books, watching films, and spend my free time with my girlfriend Amalia ❤.\n  ","date":1342303200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577725658,"objectID":"6083a88ee3411b0d17ce02d738f69d47","permalink":"/about/","publishdate":"2012-07-15T00:00:00+02:00","relpermalink":"/about/","section":"","summary":".org-center { margin-left: auto; margin-right: auto; text-align: center; }     Figure 1: Which is this crazy guy?    I am a teacher assistant at the University of Granada, specialised in Artificial Intelligence. As many people, I have several roles:\n  Since a researcher side, I have a index-h of 16, with more than 24 papers (more than 18 in Q1), with more than 3000 citations.","tags":["menu"],"title":"About me","type":"page"},{"authors":null,"categories":["programming"],"content":"All the source code of this post is available at github.\nIn the previous post, I recognized my predilection for Python. For me, it is a great language for create prototypes in many areas. For my research work, I usually creates/designs algorithms for continuous optimization using evolutionary algorithms. For these algorithms, languages like C/C++ or Java are widely used, specially for its good performance (to publish, it is usual to have to make many comparisons between algorithms, so the performance could be critical. However, for testing new ideas, many authors uses other tools like Mathlab that reduces the developer time at the cost of a higher computing time.\nI agree that Mathlab is great for numerical algorithms, but I still prefer Python over Mathlab, because I'm more confortable with it, and have many libraries, and it's more simpler to call code in other languages, written in C or Java. That allow us to increase the performance, and I like to test how much it could be improved.\nSeveral months ago, I start writing my most succesful algorithm, Memetic Algorithms based on LS Chaining, in Python. I had several doubts about the performance, so I start writing one element, an Steady-State Genetic Algorithm, in Python.\nCalling C/C++ code from python The first challenge I had to tackle was to allow my python program to use the same benchmark functions than other implementations, CEC'2005 benchmark. This benchmark define the functions to optimize, thus its main funtionality is evaluate my solutions, when each solution is a vector of real numbers, with a real fitness value. The benchmark code was implemented (by its authors) in C/C++. So, my python code have to call C++ code.\nFor doing that, I used the library boost::python, that is, in my opinion, the simpler way to call C/C++ code, specially when we uses numpy package.\nIn my case, it is very simple, because I need few functions:\n#include \u0026lt;boost/python.hpp\u0026gt; #include \u0026lt;boost/python/numeric.hpp\u0026gt; #include \u0026lt;boost/python/list.hpp\u0026gt; #include \u0026lt;iostream\u0026gt; #include \u0026quot;cec2005/cec2005.h\u0026quot; #include \u0026quot;cec2005/srandom.h\u0026quot; using namespace boost::python; Random r(new SRandom(12345679)); void set_function(int fun, int dim) { init_cec2005(\u0026amp;r, fun, dim); } double evalua(const numeric::array \u0026amp;el) { const tuple \u0026amp;shape = extract\u0026lt;tuple\u0026gt;(el.attr(\u0026quot;shape\u0026quot;)); unsigned n = boost::python::extract\u0026lt;unsigned\u0026gt;(shape[0]); double *tmp = new double[n]; for(unsigned int i = 0; i \u0026lt; n; i++) { tmp[i] = boost::python::extract\u0026lt;double\u0026gt;(el[i]); } double result = eval_cec2005(tmp, n); delete tmp; return result; } ... BOOST_PYTHON_MODULE(libpycec2005) { using namespace boost::python; numeric::array::set_module_and_type( \u0026quot;numpy\u0026quot;, \u0026quot;ndarray\u0026quot;); def(\u0026quot;config\u0026quot;, \u0026amp;set_function); def(\u0026quot;evaluate\u0026quot;, \u0026amp;evalua); ... }  More info in the good boost::python documentation.\nOne we can call C/C++ code, we have implemented the algorithm in python code. The test code was the following:\nfrom ssga import SSGA from readargs import ArgsCEC05 import libpycec2005 as cec2005 import numpy def check_dimension(option, opt, value): if value not in [2, 10, 30, 50]: raise OptionValueError( \u0026quot;option %s: invalid dimensionality value: %r\u0026quot; % (opt, value)) def main(): \u0026quot;\u0026quot;\u0026quot; Main program \u0026quot;\u0026quot;\u0026quot; args = ArgsCEC05() if args.hasError: args.print_help_exit() fun = args.function dim = args.dimension print \u0026quot;Function: %d\u0026quot; %fun print \u0026quot;Dimension: %d\u0026quot; %dim cec2005.config(fun, dim) domain = cec2005.domain(fun) print \u0026quot;Domain: \u0026quot;, domain ea = SSGA(domain=domain, size=60, dim=dim, fitness=cec2005.evaluate) for x in xrange(25): ea.run(maxeval=dim*10000) [bestsol, bestfit] = ea.getBest() print \u0026quot;BestSol: \u0026quot;, bestsol print \u0026quot;BestFitness: %e\u0026quot; %bestfit ea.reset() if __name__ == \u0026quot;__main__\u0026quot;: main()  This source code run the algorithm 25 times, and in each run the algorithm stops when they are created 10000*dim solutions. These conditions are indicated in the benchmark specification. The only parameter was the function (-f, used function 1 by default) and dimension (-d) from 10, 30, 50.\nProfiling the computing time How much time it takes? I have changed xrange(25) for xrange(1) and we have run its current version. The final time was 7 minutes for dimension 10, and 21 minutes for dimension 30 (for only one function).\nBecause I like to make more interesting things, that only waiting computing time, I use the profile, only one run for the function, to detect the functions/method more expensive in computing time.\npython -m cProfile runcec.py -f 1 -d 10  The output was the following:\n2943600 function calls (2943531 primitive calls) in 31.031 seconds Ordered by: standard name ncalls tottime percall cumtime percall filename:lineno(function) .... 1 0.001 0.001 0.126 0.126 ssga.py:1(\u0026lt;module\u0026gt;) 99940 0.561 0.000 17.463 0.000 ssga.py:109(cross) 1 0.000 0.000 0.000 0.000 ssga.py:123(reset) 1 5.559 5.559 51.129 51.129 ssga.py:126(run) 1 0.000 0.000 0.000 0.000 ssga.py:14(__init__) 1 0.000 0.000 0.000 0.000 ssga.py:158(getBest) 1 0.000 0.000 0.000 0.000 ssga.py:31(set_mutation_rate) 99940 0.730 0.000 1.885 0.000 ssga.py:45(mutation) 12438 0.286 0.000 0.758 0.000 ssga.py:50(mutationBGA) 1 0.002 0.002 0.002 0.002 ssga.py:77(initPopulation) 105883 1.101 0.000 5.604 0.000 ssga.py:89(updateWorst) 1 0.000 0.000 0.000 0.000 ssga.py:9(SSGA) 99940 1.049 0.000 20.617 0.000 ssga.py:97(getParents) ...  With the profile we can observe the most expensive methods in our code: getParents (20 seconds), crossover operator (17 seconds), and updateWorst (5 seconds). These methods are the 85% of the computing time, and the first two methods the 74% of the computing time.\nOptimising the code That proves the majority of computing time is due to a minority of the code, only three methods. If we can optimize these methods, our code could be improved a lot.\nWe can uses again the boost::python package, but it's a bit tedious to use it. So, we have used the cython package. With cython we can optimize the source code adding information about the types.\nFor instead, Instead of the following code:\nimport numpy as np def distance(ind1,ind2): \u0026quot;\u0026quot;\u0026quot; Euclidean distance ind1 -- first array to compare ind2 -- second array to compare Return euclidean distance between the individuals \u0026gt;\u0026gt;\u0026gt; from numpy.random import rand \u0026gt;\u0026gt;\u0026gt; import numpy as np \u0026gt;\u0026gt;\u0026gt; dim = 30 \u0026gt;\u0026gt;\u0026gt; sol = rand(dim) \u0026gt;\u0026gt;\u0026gt; distance(sol,sol) 0.0 \u0026gt;\u0026gt;\u0026gt; ref=np.zeros(dim) \u0026gt;\u0026gt;\u0026gt; dist=distance(sol,ref) \u0026gt;\u0026gt;\u0026gt; dist \u0026gt; 0 True \u0026gt;\u0026gt;\u0026gt; dist2 = distance(sol*2,ref) \u0026gt;\u0026gt;\u0026gt; 2*dist == dist2 True \u0026quot;\u0026quot;\u0026quot; dif = ind1-ind2 sum = (dif*dif).sum() return math.sqrt(sum)  we can write:\ncimport numpy as np cimport cython DTYPE = np.double ctypedef np.double_t DTYPE_t ctypedef np.int_t BTYPE_t def distance(np.ndarray[DTYPE_t, ndim=1]ind1, np.ndarray[DTYPE_t, ndim=1] ind2): \u0026quot;\u0026quot;\u0026quot; Euclidean distance ind1 -- first array to compare ind2 -- second array to compare .... \u0026quot;\u0026quot;\u0026quot; cdef np.ndarray[DTYPE_t, ndim=1] dif = ind1-ind2 cdef double sum = (dif*dif).sum() return math.sqrt(sum)  We can see that is still very readable. we only have put information about the type and dimension in the vector parameters and about the variables, using the keyword cdef.\nLet's see as an example the first method, the crossover operator, implemented in the crossBLX method:\nimport numpy as np import math def crossBLX(mother,parent,domain,alpha): \u0026quot;\u0026quot;\u0026quot; crossover operator BLX-alpha mother -- mother (first individual) parent -- parent (second individual) domain -- domain to check alpha -- parameter alpha Returns the new children following the expression children = random(x-alpha*dif, y+alpha*dif), where dif=abs(x,y) and x=lower(mother,parents), y=upper(mother,parents) \u0026gt;\u0026gt;\u0026gt; import numpy as np \u0026gt;\u0026gt;\u0026gt; low=-5 \u0026gt;\u0026gt;\u0026gt; upper = 5 \u0026gt;\u0026gt;\u0026gt; dim=30 \u0026gt;\u0026gt;\u0026gt; sol = np.array([1,2,3,2,1]) \u0026gt;\u0026gt;\u0026gt; crossBLX(sol,sol,[low,upper],0) array([ 1., 2., 3., 2., 1.]) \u0026quot;\u0026quot;\u0026quot; diff = abs(mother-parent) dim = mother.size I=diff*alpha points = np.array([mother,parent]) A=np.amin(points,axis=0)-I B=np.amax(points,axis=0)+I children = np.random.uniform(A,B,dim) [low,high]=domain return np.clip(children, low, high)  We can see that it is very simple to implement using numpy, but it is still very slow. With cython I have defined directly implement the many operations, the following code:\ndef crossBLX(np.ndarray[DTYPE_t, ndim=1] mother,np.ndarray[DTYPE_t, ndim=1] parent,list domain, double alpha): \u0026quot;\u0026quot;\u0026quot; ... \u0026quot;\u0026quot;\u0026quot; cdef np.ndarray[DTYPE_t, ndim=1] C, r cdef int low, high, dim cdef double x, y cdef double I, A, B cdef unsigned i [low,high]=domain dim = mother.shape[0] C = np.zeros(dim) r = random.randreal(0,1,dim) for i in range(dim): if mother[i] \u0026lt; parent[i]: (x,y) = (mother[i],parent[i]) else: (y,x) = (mother[i],parent[i]) I = alpha*(y-x) A=x-I B=y+I if (A \u0026lt; low): A = low if (B \u0026gt; high): B = high C[i] = A+r[i]*(B-A) return C  It's true that the source code is more complicated, but it is still very readable. I have compared the two implementation to make sure both return the same values.\nMeasuring the improvement How much these small changes in the code? I have profile the source code again and it gives me:\n1020045 function calls (1019976 primitive calls) in 18.003 seconds Ordered by: standard name ncalls tottime percall cumtime percall filename:lineno(function) .... 1 0.001 0.001 0.127 0.127 ssga.py:1(\u0026lt;module\u0026gt;) 99940 0.425 0.000 2.432 0.000 ssga.py:109(cross) 1 0.000 0.000 0.000 0.000 ssga.py:123(reset) 1 5.415 5.415 17.864 17.864 ssga.py:126(run) 1 0.000 0.000 0.000 0.000 ssga.py:14(__init__) 1 0.000 0.000 0.000 0.000 ssga.py:158(getBest) 1 0.000 0.000 0.000 0.000 ssga.py:31(set_mutation_rate) 99940 0.699 0.000 2.006 0.000 ssga.py:45(mutation) 12544 0.338 0.000 0.929 0.000 ssga.py:50(mutationBGA) 1 0.002 0.002 0.002 0.002 ssga.py:77(initPopulation) 105959 0.775 0.000 1.343 0.000 ssga.py:89(updateWorst) 1 0.000 0.000 0.000 0.000 ssga.py:9(SSGA) 99940 0.940 0.000 6.665 0.000 ssga.py:97(getParents) ....  We can see the improvement obtained.\n   Method Python Cython     cross : 17.4 2.4   getParents : 20.6 6.6   updateWorst : 5.6 1.3   Total 43.6 10.3    The new code takes only a 23% of the computing time of the previous code. With these changes, we have reduced the total time from 51 seconds to 18 code.\nIn perspective Now, I run the source code without the profile, and test the source code obtaining the following time:\n   Method dim=10 dim=30 dim=50     Python 44s 3240s (54m) \u0026ndash;   Cython 10s 28s 48s   Improvement 77% 99% \u0026mdash;    In the following table, we test the maximum time for one and 25 runs (the time depends on the function used).\n   #functions dim=10 dim=30 dim=50     1 10s/18s 28s/40s 48s/1m   25 3/7m 15/21m 38m/    So, the total computing time is 7 minutes for dimension 10, and 21 minutes for dimension 30. These numbers are very acceptable, specially because we can test in parallel the different functions in a cluster of computers. Unfortunately, an implementation in Mathlab not only take more time, but also, for licensing reasons, it could not run in parallel without limit.\nIn resume, we can uses python code, not only to create experimental prototypes, but also to create functional prototypes.\nAnd about the possible testing problem, I've been working on it, but I think it is enough for a post, didn't it? :-)\nAll the code refered in the post, both in python and cython, is available at github, if you want to see it.\n","date":1342303200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"af62bc731737f40f15b6a1a4236f8c3e","permalink":"/post/improving_python1/","publishdate":"2012-07-15T00:00:00+02:00","relpermalink":"/post/improving_python1/","section":"post","summary":"All the source code of this post is available at github.\nIn the previous post, I recognized my predilection for Python. For me, it is a great language for create prototypes in many areas. For my research work, I usually creates/designs algorithms for continuous optimization using evolutionary algorithms. For these algorithms, languages like C/C++ or Java are widely used, specially for its good performance (to publish, it is usual to have to make many comparisons between algorithms, so the performance could be critical.","tags":["python","performance"],"title":"Improving performance in Python","type":"post"},{"authors":null,"categories":["programming"],"content":"Today I was making a little programming using the mathematical software R (very useful for statistics, by the way), for a little test.\nI'm one of the authors of a Cran package (Rmalschains) for continuous optimization, and I was testing another packages to compare results.\nComparing a particular package I realise that the API doesn't give me enough control for the comparisons. Briefly, to compare different algorithms all of them should stop when the same number of solutions is achieved. Unfortunately, for the DE package, the stopping criterion is the maximum iterations number, and for one strategy (the default strategy) this number differs, maintaining the same maximum iterations number, in function of the function to improve. I know, not so briefly :-).\nIn resume, I want to pass a function to evaluate solutions to an algorithm, and that only the first maxEvals solutions could be considered. So, it should be nice that after maxEvals function evaluations the algorithm will stop.\nThe aim is very simple in a theorical way, but I have only the control over a callback function used by the algorithm, and I cannot use an \u0026lsquo;exit\u0026rsquo; function into the function, because in that case will stop the global program, not only the current state of the algorithm.\nThe solution? Using these \u0026lsquo;complex\u0026rsquo; concepts that many people think that are useless, specially my CS students :-). Combining a call with continuation with a closure:\nfinalFitness = callCC (function(exitFitness) { fitnessCheck \u0026lt;- function(fn, maxevals) { function(x) { if (total == 0 || total \u0026lt; maxevals) { total \u0026lt;\u0026lt;- total +1; fitness = fn(x); if (total == 1 || fitness \u0026lt; bestFitness) { bestFitness \u0026lt;\u0026lt;- fitness; } } if (total \u0026gt;= maxevals) { exitFitness(bestFitness); } fitness; } } fitCheck = fitnessCheck(fun$fitness, fun$maxevals) log \u0026lt;- capture.output({ total \u0026lt;- 0 result=DEoptim(fitCheck, lower, upper, control=list(itermax=fun$maxevals/NP)) }) exitFitness(result$optim$bestval) })  I know, it is a bit confusing. callCC implement the concept of call-with-current-continuation to run a code with an exit function exitFitness that allows me to stop the run of the algorithm. Because the function only does a run of the algorithm (DEOptim), I can stop when I want. Also, to make it more elegant, I use a closure fitnessCheck that receives a function and a maximum number of call, and it stops when the maximum calls number is achieved (total and bestFitness are global variable, so the way to modify their values is using \u0026laquo;- instead of the classical \u0026lt;- or =).\nBy the way, capture.output is a function that disables all the output of DEoptim algorithm.\n","date":1341871200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"ec71b29fd3b11451c0d5c8c00f147130","permalink":"/post/rmain/","publishdate":"2012-07-10T00:00:00+02:00","relpermalink":"/post/rmain/","section":"post","summary":"Today I was making a little programming using the mathematical software R (very useful for statistics, by the way), for a little test.\nI'm one of the authors of a Cran package (Rmalschains) for continuous optimization, and I was testing another packages to compare results.\nComparing a particular package I realise that the API doesn't give me enough control for the comparisons. Briefly, to compare different algorithms all of them should stop when the same number of solutions is achieved.","tags":["R","util"],"title":"Callback that stop algorithm in R","type":"post"},{"authors":null,"categories":["programming"],"content":"I love to learn new programming languages, specially whose that has new features that could be used to change your personal programming way. Also, it is very useful to get used to accept new ideas and avoid get in in the famous language wars. In this post, I'm going to give my personal idea of these languages, starting from a C/C++ and Java programmer. Over all, this is my personal opinion, after hours of working in these languages, not only using a joy program.\nPerl It was my first scripting language, and I've been working in Perl in a proyect for a private company for two years eight hours per day (my first job without extra hours without been paid). In that case, it was a good language decision, and I learnt many tricks to write readable programs in Perl.\n  community: A community that likes to create an ecosystem to reuse, that create the CPAN. At the same time, a community that enforces freedom, allowing each one to use the library and guidelines that considers good.\n  The good: The CPAN, and the conciseness and flexbility of the language, with packages like Moose and several test packages (and very strange packages in ACME domain :-) ). At the same time, there is always simpler version of packages if you want them.\n  The bad: The original Object-Oriented, the complexity in creating your own modules (in comparisons to the simpler packages model like python). Also, if you don't want to use object-oriented, sometimes you need to create complex combinations of hashes and arrays with references, and it is not very readable.\n  Developer tools: I usually edit with Vim, I don't need any particular framework, but I strongly recommend strict mode, and essential packages like autodie, Moose, \u0026lt;:IO\u0026gt;, test packages like Test::More. Always check CPAN before a new proyect.\n  I resume, although many people say that Perl is dead, it is still alive, and if you learn it, you don't regret it, it is a very useful tool. I still makes many small programs almost everyday using Perl because it's a very useful language, mainly for text processing (probably the best one).\nTo learn more I recommend the free book Higher-Order Perl, it is a opening book. Also, the freely book Modern Perl is a useful book to see new modern programming ways and wonderful packages.\nPython My first love, a very simple but more readable, and very useful tools for any field. The most beautiful syntax in my opinion. I have been deeply working in Python, for prototyping and several complex project. Also, very good in web developer (my favourite is Django but there are many good ones).\n  The good: Its syntax, packages and object models. Also, its libraries have tendency to have simple APIs (by a community very worried about that). The great interactive shell ipython. Also, it have many interesting tools for scientific researchers: numpy, matplotlib, several parallel libraries, scipy.\n  The bad: nothing really serious, the inherent problems with duck typing, like excessive trivial testing. However, tools like pyflakes or pylint allow developers reduce trivial errors.\n  Developer tools: Sometimes I edit with Vim, but nowadays I uses spyder 2 by its integration with pyflakes and ipython. There are also very good IDEs like eric4. For performance aspects, there are many tools, in a future post, I am going to put a real example of improvement.\n  I resume, it is a very good language that any developer should now, because it is very simple and useful. Specially for scientific works, not only by the mathematical tool Sage but also by many libraries.\nScala The most recent adquisition to this list is the Scala language. This JVM language is similar to Groovy but in my opinion, superior. However, it is a very good language but I think that it is not very popular in pragmatic programmer by the scientific origin of its author, clearly seen in its documentation. Also, sometimes the converse developers likes to show how flexible and powerful is the language with complex examples (not in length, but in its syntax) have given the idea of a complex language.\n  The good: Its syntax is very orthogonal and simple (reducing the verbosity of Java). It is a strong typing system (different with groovy) with a auto-detection of types (like auto keywords in other languages). It enforces to uses immutable classes and method, allowing you a functional programming.\n  The bad: Differences in generical contenedors with Java. There are very powerful but you have to converse from one to another.\n  Developer tools: like in Java, I recommed Eclipse with scala plugins. For compiling proyects in both languages you can use maven but you need several plugins (only if you combine them). Another compiling tools like sbt or grandle could be useful.\n  In resume, a very interesting language that java developer should give a look, but it still have a promising future.\nIn my opinion, its community should \u0026lsquo;break\u0026rsquo; the idea of complexity or it going to be a very niching language while groovy would be stronger and widely used.\nIn resume I always recommend to learn new languages. You can learn many possibilites: clojure, immutability, libraries, \u0026hellip; that are not so visible in your current main language.\nPS: I have let out other languages that I've been playing in: R, Ruby, Haskell, groovy, F# because I want to write only about languages in which I have a strong knowledge, and used it in real-word projects (and not only joy projects).\n","date":1341352800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577716943,"objectID":"433dbb2cad169e2da964bcccd400160f","permalink":"/post/languages/","publishdate":"2012-07-04T00:00:00+02:00","relpermalink":"/post/languages/","section":"post","summary":"I love to learn new programming languages, specially whose that has new features that could be used to change your personal programming way. Also, it is very useful to get used to accept new ideas and avoid get in in the famous language wars. In this post, I'm going to give my personal idea of these languages, starting from a C/C++ and Java programmer. Over all, this is my personal opinion, after hours of working in these languages, not only using a joy program.","tags":null,"title":"Learning new languages?","type":"post"},{"authors":["T. Liao","D. Molina","T. Stützle","M.A. Montes De Oca","M. Dorigo"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"3dd1678164a0c060edf7f1081db96868","permalink":"/publication/liao-2012159/","publishdate":"2019-12-30T14:59:53.153468Z","relpermalink":"/publication/liao-2012159/","section":"publication","summary":"","tags":null,"title":"An ACO algorithm benchmarked on the BBOB noiseless function testbed","type":"publication"},{"authors":["J. Marín","D. Molina","F. Herrera"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1325376000,"objectID":"e8b5fabcef21b065b030d16617de6c1b","permalink":"/publication/marin-2012331/","publishdate":"2019-12-30T14:59:53.154018Z","relpermalink":"/publication/marin-2012331/","section":"publication","summary":"","tags":null,"title":"Modeling dynamics of a real-coded CHC algorithm in terms of dynamical probability distributions","type":"publication"},{"authors":["A. Puris","R. Bello","D. Molina","F. Herrera"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"75fda4c13e97cebbf6d973db934e90bd","permalink":"/publication/puris-2012/","publishdate":"2019-12-30T14:59:53.153202Z","relpermalink":"/publication/puris-2012/","section":"publication","summary":"","tags":null,"title":"Optimising real parameters using the information of a mesh of solutions: VMO algorithm","type":"publication"},{"authors":["B. Lacroix","D. Molina","F. Herrera"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"3da474ec53c9f7f0b88a443ff4ead1e7","permalink":"/publication/lacroix-2012/","publishdate":"2019-12-30T14:59:53.152941Z","relpermalink":"/publication/lacroix-2012/","section":"publication","summary":"","tags":null,"title":"Region based memetic algorithm with LS chaining","type":"publication"},{"authors":["C. Bergmeir","I. Triguero","D. Molina","J.L. Aznarte","J.M. Benitez"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"3cf95d9222a961aeda119eda8a13b464","permalink":"/publication/bergmeir-20121841/","publishdate":"2019-12-30T14:59:53.152662Z","relpermalink":"/publication/bergmeir-20121841/","section":"publication","summary":"","tags":null,"title":"Time series modeling and forecasting using memetic algorithms for regime-switching models","type":"publication"},{"authors":["A. Puris","R. Bello","D. Molina","F. Herrera"],"categories":null,"content":"","date":1325376000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"2446920efc15bdbf7bf5436c43084ab3","permalink":"/publication/puris-2012511/","publishdate":"2019-12-30T14:59:53.153744Z","relpermalink":"/publication/puris-2012511/","section":"publication","summary":"","tags":null,"title":"Variable mesh optimization for continuous optimization problems","type":"publication"},{"authors":["J. Derrac","S. García","D. Molina","F. Herrera"],"categories":null,"content":"","date":1293840000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"87b0a80ae838d2ad21308a044c9ef5d2","permalink":"/publication/derrac-20113/","publishdate":"2019-12-30T14:59:53.155605Z","relpermalink":"/publication/derrac-20113/","section":"publication","summary":"","tags":null,"title":"A practical tutorial on the use of nonparametric statistical tests as a methodology for comparing evolutionary and swarm intelligence algorithms","type":"publication"},{"authors":["J.L. Aznarte","D. Molina","A.M. Sánchez","J.M. Benítez"],"categories":null,"content":"","date":1293840000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"58e059307619451111d211cff4453f6f","permalink":"/publication/aznarte-2011386/","publishdate":"2019-12-30T14:59:53.155288Z","relpermalink":"/publication/aznarte-2011386/","section":"publication","summary":"","tags":null,"title":"A test for the homoscedasticity of the residuals in fuzzy rule-based forecasters","type":"publication"},{"authors":["M. Lozano","D. Molina","F. Herrera"],"categories":null,"content":"","date":1293840000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"ae61b5b5cdf9e4b26a52ad5d4542c15b","permalink":"/publication/lozano-20112085/","publishdate":"2019-12-30T14:59:53.154306Z","relpermalink":"/publication/lozano-20112085/","section":"publication","summary":"","tags":null,"title":"Editorial scalability of evolutionary algorithms and other metaheuristics for large-scale continuous optimization problems","type":"publication"},{"authors":["M. Lozano","D. Molina","C. García-Martínez"],"categories":null,"content":"","date":1293840000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"1947e1966dc0a21ec6e2c06f0178b035","permalink":"/publication/lozano-201131/","publishdate":"2019-12-30T14:59:53.154966Z","relpermalink":"/publication/lozano-201131/","section":"publication","summary":"","tags":null,"title":"Iterated greedy for the maximum diversity problem","type":"publication"},{"authors":["D. Molina","M. Lozano","A.M. Sánchez","F. Herrera"],"categories":null,"content":"","date":1293840000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"05e3e9739aa3e470c3d11dbfeb9ce28e","permalink":"/publication/molina-20112201/","publishdate":"2019-12-30T14:59:53.154638Z","relpermalink":"/publication/molina-20112201/","section":"publication","summary":"","tags":null,"title":"Memetic algorithms based on local search chains for large scale continuous optimisation problems: MA-SSW-Chains","type":"publication"},{"authors":["D. Molina","M. Lozano","F. Herrera"],"categories":null,"content":"","date":1262304000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"d9bbcc62890f96724e544985f842872c","permalink":"/publication/molina-2010/","publishdate":"2019-12-30T14:59:53.155907Z","relpermalink":"/publication/molina-2010/","section":"publication","summary":"","tags":null,"title":"MA-SW-Chains: Memetic algorithm based on local search chains for large scale continuous global optimization","type":"publication"},{"authors":["D. Molina","M. Lozano","C. García-Martínez","F. Herrera"],"categories":null,"content":"","date":1262304000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"bb6940892997db417bd9b5fd5059bc68","permalink":"/publication/molina-201027/","publishdate":"2019-12-30T14:59:53.156204Z","relpermalink":"/publication/molina-201027/","section":"publication","summary":"","tags":null,"title":"Memetic algorithms for continuous optimisation based on local search chains","type":"publication"},{"authors":["S. García","D. Molina","M. Lozano","F. Herrera"],"categories":null,"content":"","date":1230768000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1230768000,"objectID":"60e918edeac69b884baf6b1056fa9e28","permalink":"/publication/garcia-2009617/","publishdate":"2019-12-30T14:59:53.157381Z","relpermalink":"/publication/garcia-2009617/","section":"publication","summary":"","tags":null,"title":"A study on the use of non-parametric tests for analyzing the evolutionary algorithms' behaviour: A case study on the CEC'2005 Special Session on Real Parameter Optimization","type":"publication"},{"authors":["D. Molina","M. Lozano","F. Herrera"],"categories":null,"content":"","date":1230768000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"23cb50b27a6dcdfbcbd608a926644eb1","permalink":"/publication/molina-20091068/","publishdate":"2019-12-30T14:59:53.157076Z","relpermalink":"/publication/molina-20091068/","section":"publication","summary":"","tags":null,"title":"Memetic algorithm with local search chaining for continuous optimization problems: A scalability test","type":"publication"},{"authors":["D. Molina","M. Lozano","F. Herrer"],"categories":null,"content":"","date":1230768000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"6d2d874707ddb41bacb780d1a8bbe1e9","permalink":"/publication/molina-2009830/","publishdate":"2019-12-30T14:59:53.157675Z","relpermalink":"/publication/molina-2009830/","section":"publication","summary":"","tags":null,"title":"Memetic algorithm with local search chaining for large scale continuous optimization problems","type":"publication"},{"authors":["D. Molina","M. Lozano","F. Herrera"],"categories":null,"content":"","date":1230768000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"f949db9e11aac49a2c63f479e43441ba","permalink":"/publication/molina-2009221/","publishdate":"2019-12-30T14:59:53.156628Z","relpermalink":"/publication/molina-2009221/","section":"publication","summary":"","tags":null,"title":"Study of the influence of the local search method in memetic algorithms for large scale continuous optimization problems","type":"publication"},{"authors":["C. García-Martínez","M. Lozano","F. Herrera","D. Molina","A.M. Sánchez"],"categories":null,"content":"","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1199145600,"objectID":"03c465867d3c5e2be2d56e9ad498d699","permalink":"/publication/garcia-martinez-20081088/","publishdate":"2019-12-30T14:59:53.157959Z","relpermalink":"/publication/garcia-martinez-20081088/","section":"publication","summary":"","tags":null,"title":"Global and local real-coded genetic algorithms based on parent-centric crossover operators","type":"publication"},{"authors":["D. Molina","M. Lozano","C. García-Martínez","F. Herrera"],"categories":null,"content":"","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"65d54c2709621392862393c82bf517b8","permalink":"/publication/molina-200858/","publishdate":"2019-12-30T14:59:53.158539Z","relpermalink":"/publication/molina-200858/","section":"publication","summary":"","tags":null,"title":"Memetic algorithm for intense local search methods using local search chains","type":"publication"},{"authors":["A.M. Sánchez","M. Lozano","C. García-Martínez","D. Molina","F. Herrera"],"categories":null,"content":"","date":1199145600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1199145600,"objectID":"76e8c115560d4d9879a25b852b7520fb","permalink":"/publication/sanchez-2008246/","publishdate":"2019-12-30T14:59:53.158254Z","relpermalink":"/publication/sanchez-2008246/","section":"publication","summary":"","tags":null,"title":"Real-parameter crossover operators with multiple descendents: An experimental study","type":"publication"},{"authors":["C. García-Martínez","M. Lozano","D. Molina"],"categories":null,"content":"","date":1136073600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1136073600,"objectID":"2e079a5b43ddf691ef34f48d47f1df6d","permalink":"/publication/garcia-martinez-2006192/","publishdate":"2019-12-30T14:59:53.159125Z","relpermalink":"/publication/garcia-martinez-2006192/","section":"publication","summary":"","tags":null,"title":"A local genetic algorithm for binary-coded problems","type":"publication"},{"authors":["F. Herrera","M. Lozano","D. Molina"],"categories":null,"content":"","date":1136073600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"c41d05585c825158b6da4ff0f62a9016","permalink":"/publication/herrera-2006450/","publishdate":"2019-12-30T14:59:53.158838Z","relpermalink":"/publication/herrera-2006450/","section":"publication","summary":"","tags":null,"title":"Continuous scatter search: An analysis of the integration of some combination methods and improvement strategies","type":"publication"},{"authors":["D. Molina","F. Herrera","M. Lozano"],"categories":null,"content":"","date":1104537600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577724600,"objectID":"8e77c883eac47a894f630712386f63fb","permalink":"/publication/molina-2005888/","publishdate":"2019-12-30T14:59:53.1594Z","relpermalink":"/publication/molina-2005888/","section":"publication","summary":"","tags":null,"title":"Adaptive local search parameters for real-coded memetic algorithms","type":"publication"},{"authors":["M. Lozano","F. Herrera","N. Krasnogor","D. Molina"],"categories":null,"content":"","date":1072915200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1577718173,"objectID":"3c92b2b862a284f59d5e8d1ced2564a2","permalink":"/publication/lozano-2004273/","publishdate":"2019-12-30T14:59:53.159665Z","relpermalink":"/publication/lozano-2004273/","section":"publication","summary":"","tags":null,"title":"Real-coded memetic algorithms with crossover hill-climbing","type":"publication"}]